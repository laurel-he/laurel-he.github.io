<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 瑶风</title>
    <link>https://YOURNAME.github.io/post/</link>
    <description>Recent content in Posts on 瑶风</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 30 Sep 2021 16:34:10 +0000</lastBuildDate><atom:link href="https://YOURNAME.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>laravel配置params选项如MYSQL_ATTR_USE_BUFFERED_QUERY等</title>
      <link>https://YOURNAME.github.io/post/laravel_err_01/</link>
      <pubDate>Thu, 30 Sep 2021 16:34:10 +0000</pubDate>
      
      <guid>https://YOURNAME.github.io/post/laravel_err_01/</guid>
      <description>以下内容已同步至CSDN 绝了，laravel使用的是illuminate/database作为orm，我们用的swoole，在使用过程中报了如下错误： SQLSTATE[HY000]: General error: 2014 Cannot execute queries while other unbuffered queries are active. Consider using PDOStatement::fetchAll() 这个错误在网上一搜</description>
    </item>
    
    <item>
      <title>hugo搭建github个人博客</title>
      <link>https://YOURNAME.github.io/post/hugo/</link>
      <pubDate>Thu, 12 Aug 2021 16:10:10 +0000</pubDate>
      
      <guid>https://YOURNAME.github.io/post/hugo/</guid>
      <description>之前个人博客是使用的hexo搭建的，经常会出各种bug，而且时不时的升级，导致npm 也要对应，因此放弃，使用hugo,hugo是基于go语言开发的。 步骤 下载安装 非常简单，略（如果是windows需要加</description>
    </item>
    
    <item>
      <title>目录</title>
      <link>https://YOURNAME.github.io/post/total/</link>
      <pubDate>Thu, 03 Sep 2020 16:10:10 +0000</pubDate>
      
      <guid>https://YOURNAME.github.io/post/total/</guid>
      <description>目录： 1 刷题 2 设计模式 3 数据库 4 操作系统 5 php 6 go 7 python 8 前端 9 云原生 10 消息队列 11 学习</description>
    </item>
    
    <item>
      <title>计算相关</title>
      <link>https://YOURNAME.github.io/post/codecollect/</link>
      <pubDate>Tue, 25 Feb 2020 20:10:10 +0000</pubDate>
      
      <guid>https://YOURNAME.github.io/post/codecollect/</guid>
      <description>1 计算矩形是否相交 描述 给定两个矩形的左上角起始点坐标和矩形的宽，高，计算这两个矩形是否相交 分析 1 矩形1左上角坐标p1,右下角坐标p2,矩形2左上角坐标p3,右下角坐标p4 2 M点坐标为P1与P3点在X方</description>
    </item>
    
    <item>
      <title>运行相关</title>
      <link>https://YOURNAME.github.io/post/codecollect2/</link>
      <pubDate>Tue, 25 Feb 2020 20:10:10 +0000</pubDate>
      
      <guid>https://YOURNAME.github.io/post/codecollect2/</guid>
      <description>1 下载数据 描述 根据链接下载文件 代码 &amp;lt;?php function downloadOldFile($url,$rename,$ext){ $file_path = &amp;#39;public/images/age_60-120/&amp;#39;; $ch = curl_init($url); curl_setopt($ch, CURLOPT_HEADER, 0); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); curl_setopt($ch, CURLOPT_BINARYTRANSFER, 1); $rawdata=curl_exec ($ch); curl_close ($ch); // 使用中文文件名需要转码 $fp = fopen($file_path. $rename .&amp;#34;.&amp;#34;.$ext,&amp;#39;w&amp;#39;); fwrite($fp, $rawdata); fclose($fp); // 返回路径 return $_SERVER[&amp;#39;DOCUMENT_ROOT&amp;#39;].$file_path.$rename.&amp;#34;.&amp;#34;.$ext; } ?&amp;gt;2 按步骤执行方法 描述 经常有需求：分页执行脚本，例如前1000条执行</description>
    </item>
    
    <item>
      <title>测试</title>
      <link>https://YOURNAME.github.io/post/unittest/</link>
      <pubDate>Tue, 10 Dec 2019 12:34:10 +0000</pubDate>
      
      <guid>https://YOURNAME.github.io/post/unittest/</guid>
      <description>单元测试 mock 接口测试 stub mock fakeserver</description>
    </item>
    
    <item>
      <title>代码整洁之道1-9章</title>
      <link>https://YOURNAME.github.io/post/cleancode/</link>
      <pubDate>Mon, 07 Oct 2019 17:40:10 +0000</pubDate>
      
      <guid>https://YOURNAME.github.io/post/cleancode/</guid>
      <description>需求描述 第一章：整洁代码 要有代码 代码呈现了需求的细节，将需求明确到机器可以执行的细节程度 糟糕的代码 不要产生糟糕的、混乱的代码，勒布朗法则：稍后等于永不 混乱的代价 花时间保持代码整洁不但有关效率，还有关生</description>
    </item>
    
    <item>
      <title>工作经验总结</title>
      <link>https://YOURNAME.github.io/post/work/</link>
      <pubDate>Sat, 05 Oct 2019 17:40:10 +0000</pubDate>
      
      <guid>https://YOURNAME.github.io/post/work/</guid>
      <description>工作经验 （1）学会控制情绪</description>
    </item>
    
    <item>
      <title>代码大全</title>
      <link>https://YOURNAME.github.io/post/codecomplate_01/</link>
      <pubDate>Sat, 05 Oct 2019 10:40:10 +0000</pubDate>
      
      <guid>https://YOURNAME.github.io/post/codecomplate_01/</guid>
      <description>前期准备 前期准备的重要性 不要立即开始写代码，要做好必要的需求分析和架构设计，写好需求文档和技术文档，防止浪费时间和精力制造错误的东西 需求核对表 针对功能需求： 1．是否详细定义了系统的全部输入，包括其来源</description>
    </item>
    
    <item>
      <title>virtualbox搭建LANP环境（ubuntu）</title>
      <link>https://YOURNAME.github.io/post/lanp/</link>
      <pubDate>Sun, 28 Apr 2019 14:00:40 +0000</pubDate>
      
      <guid>https://YOURNAME.github.io/post/lanp/</guid>
      <description>1 基础软件下载 virtual box ubuntu(ubuntu server) 2 安装ubuntu (1)virtualbox创建虚拟电脑 注意：最好重新设置virtualbox-&amp;gt;管理-&amp;gt;全局设定-&amp;gt;默认虚拟电脑位置 (2)启动，网络设置成网络</description>
    </item>
    
    <item>
      <title>gitflow command version</title>
      <link>https://YOURNAME.github.io/post/git/</link>
      <pubDate>Wed, 24 Apr 2019 21:03:10 +0000</pubDate>
      
      <guid>https://YOURNAME.github.io/post/git/</guid>
      <description>新建feature/hotfix进行项目开发 更新本地代码仓库缓存 git remote update git checkout develop git merge origin/develop git branch feature/20171012_hotel_enhance ##补充 1 删除分支 git branch &amp;ndash;delete &amp;ndash;remotes origin/feature/20190214_monthly git push origin :feature/20190214_monthly 2 add之后回退 git reset HEAD 3 撤销commit git commit &amp;ndash;amend 4 撤销已经commit但是没有</description>
    </item>
    
    <item>
      <title>gitflow command version</title>
      <link>https://YOURNAME.github.io/post/githubguide/</link>
      <pubDate>Wed, 24 Apr 2019 21:03:10 +0000</pubDate>
      
      <guid>https://YOURNAME.github.io/post/githubguide/</guid>
      <description></description>
    </item>
    
    <item>
      <title>crontab基本使用</title>
      <link>https://YOURNAME.github.io/post/crontab/</link>
      <pubDate>Wed, 10 Apr 2019 18:27:44 +0000</pubDate>
      
      <guid>https://YOURNAME.github.io/post/crontab/</guid>
      <description>1 简介 crond 是linux下用来周期性的执行某种任务或等待处理某些事件的一个守护进程，与windows下的计划任务类似，当安装完成操作系统后，默认会安装此服务 工具，并且会自动启动crond进程，crond进</description>
    </item>
    
    <item>
      <title>在github上使用Hexo 搭建个人博客</title>
      <link>https://YOURNAME.github.io/post/hexo/</link>
      <pubDate>Mon, 01 Apr 2019 11:03:10 +0000</pubDate>
      
      <guid>https://YOURNAME.github.io/post/hexo/</guid>
      <description>安装 简介 Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 安装前提 node.js git 安装步骤 npm install -g hexo-cli 建站 hexo init &amp;lt;folder&amp;gt; cd &amp;lt;folder&amp;gt; npm install 创建博客 hexo new</description>
    </item>
    
    <item>
      <title>各方法实现微信机器人对比</title>
      <link>https://YOURNAME.github.io/post/wechat/</link>
      <pubDate>Thu, 28 Mar 2019 14:03:27 +0000</pubDate>
      
      <guid>https://YOURNAME.github.io/post/wechat/</guid>
      <description>wxpy 直接排除，只有极少数人的微信可以使用，无法用来实现机器人； 图灵机器人 图灵机器人可以接入微信，也可以实现群管理，但是是通过第三方来实现的 功能 详解 是否必要 接入微信公众号 群自动回复 是 主动触发回复 主动往群里</description>
    </item>
    
    <item>
      <title>一些快捷键</title>
      <link>https://YOURNAME.github.io/post/hotkey/</link>
      <pubDate>Tue, 05 Mar 2019 13:25:21 +0000</pubDate>
      
      <guid>https://YOURNAME.github.io/post/hotkey/</guid>
      <description>navicat for mysql 快捷键 1.ctrl+q 打开查询窗口 2.ctrl+/ 注释sql语句 3.ctrl+shift +/ 解除注释 4.ctrl+r 运行查询窗口的sql语句 5.ctrl+shift+r 只运行选中的sql语句 6.F6 打开一个mysql命令行窗口 7.ctrl+l 删除一行 8.ctrl+n 打开一个新的查询窗口 9.ctrl+w 关闭一个查询窗口 phpstrom</description>
    </item>
    
    <item>
      <title>Hbase基础命令</title>
      <link>https://YOURNAME.github.io/post/hbase_01/</link>
      <pubDate>Thu, 28 Feb 2019 11:03:10 +0000</pubDate>
      
      <guid>https://YOURNAME.github.io/post/hbase_01/</guid>
      <description>Hbase基础命令 启动和停止Hbase 启动 hbase/bin ./start-hbase.sh 关闭 hbase/bin ./stop-hbase.sh 使用Hbase 连接Hbase bin/hbase shell 创建表 create &amp;lsquo;test&amp;rsquo; （创建表需要添加列簇） create &amp;lsquo;表名&amp;rsquo; &amp;lsquo;列簇名1&amp;rsquo; &amp;lsquo</description>
    </item>
    
    <item>
      <title></title>
      <link>https://YOURNAME.github.io/post/yii/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://YOURNAME.github.io/post/yii/</guid>
      <description>yii 框架</description>
    </item>
    
    <item>
      <title></title>
      <link>https://YOURNAME.github.io/post/%E6%9E%B6%E6%9E%84/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://YOURNAME.github.io/post/%E6%9E%B6%E6%9E%84/</guid>
      <description>架构 正向代理与反向代理：</description>
    </item>
    
  </channel>
</rss>
